/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestion_enrolements.Interfaces;

import gestion_enrolements.ConnectionBDD.ConnectionBDD;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.UUID;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.JTable;
import javax.swing.JComboBox;
import javax.swing.JTextField;
/**
 *
 * @author tepitech
 */
public class Poste extends javax.swing.JFrame {

    /**
     * Creates new form Poste
     */
    public Poste() {
        initComponents();
       ConnectionBDD cnx = new ConnectionBDD();
         tableAfficher2();
        
    }
    
    
    private void tableAfficher2(){
        String queryAfficher = "Select * from poste";
        try(Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/enrolements","root","")) {
            PreparedStatement stmQueryAfficher = connection.prepareStatement(queryAfficher);
            ResultSet resultat = stmQueryAfficher.executeQuery();
            DefaultTableModel tableAffichage = (DefaultTableModel)tablePoste.getModel();
            tableAffichage.setRowCount(0);
            while(resultat.next()){
                String region = resultat.getString("region");
                String ville = resultat.getString("ville");
                String quartier = resultat.getString("quartier");
                String Commune = resultat.getString("commune");
                String numero  = resultat.getString("numero");
                tableAffichage.addRow(new Object[]{region,ville,Commune,quartier,numero});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Ville = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Send = new javax.swing.JButton();
        clean = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePoste = new javax.swing.JTable();
        Region = new javax.swing.JComboBox<>();
        Commune = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Quartier = new javax.swing.JTextField();
        Modifier = new javax.swing.JButton();
        supp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1380, 780));
        setMinimumSize(new java.awt.Dimension(1380, 780));
        setSize(new java.awt.Dimension(1388, 780));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("ENREGISTREMENTS     DES         POSTES");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Ville");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Quartier");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Menu Principal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Send.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Send.setText("Enregistrer");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        clean.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clean.setText("Effacer");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });

        tablePoste.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Region", "Ville", "Commune", "Quartier", "numero"
            }
        ));
        tablePoste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePosteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePoste);

        Region.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Savanes", "Kara", "Centrale ", "Plateaux", "Maritime", "Lacs" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Region");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setText("Listes des Postes   d  Enrolements");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Commune ");

        Modifier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Modifier.setText("Modifier");
        Modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierActionPerformed(evt);
            }
        });

        supp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        supp.setText("Supprimer");
        supp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(303, 303, 303)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clean, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(Region, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(Ville, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(310, 310, 310)
                                                .addComponent(jLabel7)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Quartier, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Commune, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(Modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73)
                                        .addComponent(supp, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 103, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Region, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Quartier, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ville, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Commune, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clean, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supp, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
   

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   
      new Menu_Principale().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
            // TODO add your handling code here:
                        String numPoste = UUID.randomUUID().toString().substring(0, 8);
                  try{
            ConnectionBDD cnx = new ConnectionBDD();
            String Maregion= (String) Region.getSelectedItem();
            String MaVille = (String)Ville.getText();
            String Macommune =(String)Commune.getText();
            String MonCommune = (String)Quartier.getText();
            if(MonCommune.isEmpty() || MaVille.isEmpty() || Maregion.isEmpty() || Macommune.isEmpty()) {
    JOptionPane.showMessageDialog(this, "remplissez les champs");
    return; // Empêche l'exécution de l'insertion si un champ est vide
} else {
    JOptionPane.showMessageDialog(this, "Opération en cours");
}

                   
            String query = "Insert into poste(region,Ville,Commune,Quartier,Numero) values(?,?,?,?,?)";
            PreparedStatement stmQuery = cnx.preparedStatement(query);
            stmQuery.setString(1, (String) Region.getSelectedItem());
            stmQuery.setString(2, (String) Ville.getText());
            stmQuery.setString(3, (String) Commune.getText());
            stmQuery.setString(4, (String) Quartier.getText());
            stmQuery.setString(5, (String) numPoste);

            stmQuery.executeUpdate();
            cnx.close();
            JOptionPane.showMessageDialog(null, "Insertion effecture avec succès");
                     tableAfficher2();
                    

        }catch(Exception e){
            e.printStackTrace();
        }

            // TODO add your handling code here:
          
    }//GEN-LAST:event_SendActionPerformed

    private void ModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierActionPerformed
             // TODO add your handling code here:
           int selectedRow = tablePoste.getSelectedRow();
    
    if (selectedRow != -1) {
        String newRegion = (String) Region.getSelectedItem();
        String newVille = Ville.getText();
        String newCommune = Commune.getText();
        String newQuartier = Quartier.getText();
        
        // Mettre à jour les valeurs dans le JTable table2
        tablePoste.setValueAt(newRegion, selectedRow, 0);
        tablePoste.setValueAt(newVille, selectedRow, 1);
        tablePoste.setValueAt(newCommune, selectedRow, 2);
        tablePoste.setValueAt(newQuartier, selectedRow, 3);
        
        // Mettre à jour les données dans la base de données
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/enrolements", "root", "")) {
            String updateQuery = "UPDATE poste SET region=?, ville=?, commune=?, quartier=? WHERE Numero=?";
            PreparedStatement stmUpdate = connection.prepareStatement(updateQuery);
            stmUpdate.setString(1, newRegion);
            stmUpdate.setString(2, newVille);
            stmUpdate.setString(3, newCommune);
            stmUpdate.setString(4, newQuartier);
            stmUpdate.setString(5, (String) tablePoste.getValueAt(selectedRow, 4)); // Récupérer le numéro de la ligne sélectionnée
            stmUpdate.executeUpdate();
            
            // Rafraîchir l'affichage du JTable en récupérant les données actualisées
            tableAfficher2();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }    
    }//GEN-LAST:event_ModifierActionPerformed

    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        // TODO add your handling code here:
        Region.setSelectedItem(""); // Réinitialise le champ Region
    Ville.setText(""); // Réinitialise le champ Ville
    Commune.setText(""); // Réinitialise le champ Commune
    Quartier.setText(""); // Réinitialise le champ Quartier
    }//GEN-LAST:event_cleanActionPerformed

    private void suppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppActionPerformed
       ConnectionBDD cnx = new ConnectionBDD();
DefaultTableModel table = (DefaultTableModel) tablePoste.getModel();
int selectRow = tablePoste.getSelectedRow();

if (selectRow >= 0) {
    // Récupérer les valeurs de la ligne sélectionnée
    String region = String.valueOf(table.getValueAt(selectRow, 0));
    String ville = String.valueOf(table.getValueAt(selectRow, 1));
    String commune = String.valueOf(table.getValueAt(selectRow, 2));
    String quartier = String.valueOf(table.getValueAt(selectRow, 3));

    // Afficher une boîte de dialogue de confirmation
    int option = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer cet enregistrement ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);

    if (option == JOptionPane.YES_OPTION) {
        // Suppression depuis la base de données
        // Assurez-vous d'adapter la requête de suppression à votre schéma de base de données
        String deleteQuery = "DELETE FROM poste WHERE region = ? AND ville = ? AND commune = ? AND quartier = ?";

       
    try (Connection connection = cnx.getConnection();
         PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {

        preparedStatement.setString(1, region);
        preparedStatement.setString(2, ville);
        preparedStatement.setString(3, commune);
        preparedStatement.setString(4, quartier);

            // Exécuter la requête de suppression
            preparedStatement.executeUpdate();

            // Supprimer la ligne de la JTable
            table.removeRow(selectRow);

            // Réinitialiser les champs d'entrée après la suppression si nécessaire
            Region.setSelectedItem(null);
            Ville.setText("");
            Commune.setText("");
            Quartier.setText("");

            // Autres opérations nécessaires après la suppression
            // ...

        } catch (SQLException ex) {
            ex.printStackTrace();
            // Gérer les exceptions appropriées
        }
    }
    // Si l'utilisateur clique sur "Non" dans la boîte de dialogue, ne rien faire
} else {
    // Aucune ligne sélectionnée, gérer cela en conséquence
}


    }//GEN-LAST:event_suppActionPerformed

    private void tablePosteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePosteMouseClicked
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) tablePoste.getModel();
        int selectRow = tablePoste.getSelectedRow();
        if (selectRow>=0){
            Region.setSelectedItem(String.valueOf(table.getValueAt(selectRow, 0)));
            Ville.setText(String.valueOf(table.getValueAt(selectRow, 1)));
            Commune.setText(String.valueOf(table.getValueAt(selectRow, 2)));
            Quartier.setText(String.valueOf(table.getValueAt(selectRow, 3)));
            
        }
    }//GEN-LAST:event_tablePosteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Poste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Poste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Poste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Poste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Poste().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Commune;
    private javax.swing.JButton Modifier;
    private javax.swing.JTextField Quartier;
    private javax.swing.JComboBox<String> Region;
    private javax.swing.JButton Send;
    private javax.swing.JTextField Ville;
    private javax.swing.JButton clean;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton supp;
    private javax.swing.JTable tablePoste;
    // End of variables declaration//GEN-END:variables
}
